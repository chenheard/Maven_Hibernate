<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
<meta name="apple-mobile-web-app-title" content="yiibai">
<meta http-equiv="Cache-Control" content="no-siteapp">
<title>Hibernate快速入门 - Hibernate教程™</title>
<meta name="keywords" content="">
<meta name="description" content="Hibernate是一个开源，轻量级的ORM(对象关系映射)工具。Hibernate框架简化了java应用程序与数据库交互的开发。
ORM工具简化了数据创建，数据处理和数据访">
<link rel="stylesheet" href="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/font-awesome.css" media="all">
<link rel="stylesheet" href="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/all.css" media="all">
<link rel="stylesheet" href="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/prism.css" media="all">
<style>
	.article-content ul li {list-style-type: disc;}
	.article-content ol li {list-style-type: disc;}	
	
</style>

<!--[if lt IE 9]>
<script src="http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js"></script>
<![endif]-->
<link rel="stylesheet" href="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/layer.css" id="layuicss-layer"></head>
<body class="page-home">
	
	
<header class="header">
	<div class="container">
		<h1 class="logo">
			<a href="http://www.yiibai.com/" title="易百教程"><i class="fa"></i>易百教程</a>
		</h1>
		<div class="site-navbar">
			<ul>
				<li class="has-sub-menu"><a href="#">所有教程</a>
					<div class="sub-menu">
						<ul>
							<li><a href="http://www.yiibai.com/html/java/">Java技术</a></li>
							<li><a href="http://www.yiibai.com/web/">Web技术</a></li>
							<li><a href="http://www.yiibai.com/html/script/">脚本语言</a></li>
							<li><a href="http://www.yiibai.com/html/database/">数据库</a></li>
							<li><a href="http://www.yiibai.com/hightlang/">高级语言</a></li>
							<li><a href="http://www.yiibai.com/html/misc/">其它技术</a></li>
							<li><a href="http://www.yiibai.com/v3.php?app=all" style="font-weight:bold;color: #61B3E6;">查看所有教程</a></li>
						</ul>
					</div></li>
				<li class="has-sub-menu"><a href="javascript:void(0);">Java技术</a>
					<div class="sub-menu">
						<ul>
								<li>
									<a href="http://www.yiibai.com/java/" target="_blank">Java教程</a>
								</li>
								
								<li>
									<a href="http://www.yiibai.com/design_pattern/" target="_blank">Java设计模式</a>
								</li>
								<li>
									<a href="http://www.yiibai.com/jsp/" target="_blank">JSP教程</a>
								</li>

								<li>
									<a href="http://www.yiibai.com/jdbc/" target="_blank">JDBC教程</a>
								</li>
								<li>
									<a href="http://www.yiibai.com/java_xml/" target="_blank">Java XML教程</a>
								</li>
								<li>
									<a href="http://www.yiibai.com/junit/" target="_blank">JUnit教程</a>
								</li>							
								
							
							
								<li>
									<a href="http://www.yiibai.com/struts_2/" target="_blank">Struts2教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/maven/" target="_blank">Maven教程</a>
								</li>
							
							
								<li>
									<a href="http://www.yiibai.com/javaexamples/" target="_blank">java实例教程</a>
								</li>

								<li>
									<a href="http://www.yiibai.com/mybatis/" target="_blank">MyBatis教程</a>
								</li>

								
								<li>
									<a href="http://www.yiibai.com/spring/" target="_blank">Spring教程</a>
								</li>
								<li>
									<a href="http://www.yiibai.com/spring_mvc/" target="_blank">Spring MVC教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/gradle/" target="_blank">Gradle教程</a>
								</li>
						</ul>
					</div></li>
				<li class="has-sub-menu"><a href="javascript:;">数据库</a>
					<div class="sub-menu">
						<ul>
							
								<li>
									<a href="http://www.yiibai.com/mysql/" target="_blank" title="MySQL教程">MySQL教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/couchdb/" target="_blank" title="CouchDB教程">CouchDB教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/cassandra/" target="_blank" title="Cassandra教程">Cassandra教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/mariadb/" target="_blank" title="MariaDB教程">MariaDB教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/firebase/" target="_blank" title="FireBase教程">FireBase教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/plsql/" target="_blank" title="PL/SQL教程">PL/SQL教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/postgresql/" target="_blank" title="PostgreSQL教程">PostgreSQL教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/mongodb/" target="_blank" title="MongoDB教程">MongoDB教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/sqlite/" target="_blank" title="SQLite教程">SQLite教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/db2/" target="_blank" title="DB2教程">DB2教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/redis/" target="_blank" title="Redis教程">Redis教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/memcached/" target="_blank" title="Memcached教程">Memcached教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/access/" target="_blank" title="Access教程">Access教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/sql/" target="_blank" title="SQL教程">SQL教程</a>
								</li>
							
								<li>
									<a href="http://www.yiibai.com/sql_server/" target="_blank" title="SQL Server教程">SQL Server教程</a>
								</li>
							
						</ul>
					</div></li>
				

								
					<li class=""><a href="https://www.yiibai.com/v3.php?app=post">极客文章</a></li>
					<li class="active"><a href="https://www.yiibai.com/v3.php?app=post&amp;act=new">+投稿</a></li>
			</ul>
		</div>
		<div style="padding-top:6px;width:220px;float:left;margin-left:64px;line-height:22px;" id="search-form">
		    <form action="/search.php" method="get">
				<input name="kw" style="float:left;width:134px;padding-left:8px;font-weight:bold;" type="text">
				<input style="float:left;width:48px;" value="搜索" type="submit">
			</form>
		</div>

		<div id="login-state" style="float:left;margin-top: 4px;"><div class="wel-login">					
					<a href="https://www.yiibai.com/v3.php?app=login" class="btn btn-primary">登录</a>
				</div></div>
		<div class="m-navbar-start">
			<i class="fa"></i>
		</div>
		<div class="m-wel-start">
			<i class="fa"></i>
		</div>
		<div class="m-mask"></div>
	</div>
</header>



	<section class="container container-page clearfix" style="margin-top: 24px;">
		<div class="pageside">
			<div class="pagemenus">
				<ul class="pagemenu">
					<li class="navto-ads active"><a href="https://www.yiibai.com/hibernate/" style="font-weight:bold;"><i class="fa fa-list"></i>&nbsp;&nbsp;Hibernate教程</a></li>
					
					<li style=""><a href="https://www.yiibai.com/hibernate/hibernate-architecture.html" title="Hibernate体系结构" style="">Hibernate体系结构</a></li><li style=""><a href="https://www.yiibai.com/hibernate/first-hibernate-application.html" title="Hibernate入门程序" style="">Hibernate入门程序</a></li><li style=""><a href="https://www.yiibai.com/hibernate/hibernate-with-annotation.html" title="Hibernate使用注释" style="">Hibernate使用注释</a></li><li style=""><a href="https://www.yiibai.com/hibernate/web-application-with-hibernate.html" title="Web应用程序使用Hibernate" style="">Web应用程序使用Hibernate</a></li><li style=""><a href="https://www.yiibai.com/hibernate/generator-classes.html" title="Hibernate生成器类" style="">Hibernate生成器类</a></li><li style=""><a href="https://www.yiibai.com/hibernate/hibernate-logging-by-log4j-using-xml-file.html" title="Hibernate使用Log4j日志记录(使用xml文件)" style="">Hibernate使用Log4j日志记录(使用xml文件)</a></li><li style=""><a href="https://www.yiibai.com/hibernate/hibernate-logging-by-log4j-using-properties-file.html" title="Hibernate使用Log4j日志记录(使用properties文件)" style="">Hibernate使用Log4j日志记录(使用properties文件)</a></li><li style=""><a href="https://www.yiibai.com/hibernate/hibernate-second-level-cache.html" title="Hibernate二级缓存" style="">Hibernate二级缓存</a></li><li style="border-left: 6px solid #2e82ff;font-weight: bold;"><a href="#" title="这是当前阅读的文章" style="cursor:text;background-color: #f5f2f0;">Hibernate快速入门</a></li><li style="font-size:16px;font-weight:bold;color:#666;"><a style="background-color: #f8f9f9;cursor:text;font-size:16px;color: #666;">继承映射</a></li><li><a href="https://www.yiibai.com/hibernate/hibernate-inheritance-mapping.html" title="Hibernate继承映射">Hibernate继承映射</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-hierarchy-example-using-xml-file.html" title="Hibernate使用xml文件的每个类层次一张表">Hibernate使用xml文件的每个类层次一张表</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-concrete-class.html" title="Hibernate每个具体类一张表映射(使用XML)">Hibernate每个具体类一张表映射(使用XML)</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-concrete-class-using-annotation-tutorial-example.html" title="Hibernate每个具体类一张表映射(使用注释）">Hibernate每个具体类一张表映射(使用注释）</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-subclass.html" title="Hibernate每个子类一张表（使用XML文件）实例">Hibernate每个子类一张表（使用XML文件）实例</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-subclass-using-annotation-tutorial-example.html" title="Hibernate每个子类一张表（使用注释）实例">Hibernate每个子类一张表（使用注释）实例</a></li><li><a href="https://www.yiibai.com/hibernate/table-per-hierarchy-using-annotation-tutorial-example.html" title="Hibernate每个层次类一张表（使用注释）">Hibernate每个层次类一张表（使用注释）</a></li><li style="font-size:16px;font-weight:bold;color:#666;"><a style="background-color: #f8f9f9;cursor:text;font-size:16px;color: #666;">集合映射</a></li><li><a href="https://www.yiibai.com/hibernate/collection-mapping.html" title="Hibernate集合映射">Hibernate集合映射</a></li><li><a href="https://www.yiibai.com/hibernate/mapping-list-in-collection-mapping.html" title="集合映射中的映射列表（使用xml文件）">集合映射中的映射列表（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/list-one-to-many.html" title="Hibernate一对多映射列表实例（使用xml文件）">Hibernate一对多映射列表实例（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/mapping-bag-in-collection-mapping.html" title="集合映射中的映射包（使用xml文件）">集合映射中的映射包（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/bag-one-to-many.html" title="通过Bag一对多映射示例（使用xml文件）">通过Bag一对多映射示例（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/mapping-set-in-collection-mapping.html" title="集合映射Set（使用xml文件）">集合映射Set（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/set-one-to-many.html" title="集合Set映射一对多（使用xml文件）">集合Set映射一对多（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/mapping-map-in-collection-mapping.html" title="集合Map映射（使用xml文件）">集合Map映射（使用xml文件）</a></li><li><a href="https://www.yiibai.com/hibernate/many-to-many-mapping-in-hibernate-by-map-example.html" title="集合Map多对多映射（使用xml文件）">集合Map多对多映射（使用xml文件）</a></li><li style="font-size:16px;font-weight:bold;color:#666;"><a style="background-color: #f8f9f9;cursor:text;font-size:16px;color: #666;">高级部分</a></li><li><a href="https://www.yiibai.com/hibernate/component-mapping.html" title="Hibernate组件映射">Hibernate组件映射</a></li><li><a href="https://www.yiibai.com/hibernate/one-to-one-mapping-by-many-to-one.html" title="Hibernate通过many-to-one元素的一对一映射">Hibernate通过many-to-one元素的一对一映射</a></li><li><a href="https://www.yiibai.com/hibernate/one-to-one-mapping-by-one-to-one.html" title="Hibernate通过one-to-one元素的一对一映射">Hibernate通过one-to-one元素的一对一映射</a></li><li><a href="https://www.yiibai.com/hibernate/hibernate-transaction-management-example.html" title="Hibernate事务管理">Hibernate事务管理</a></li><li><a href="https://www.yiibai.com/hibernate/hql.html" title="Hibernate查询语言（HQL）">Hibernate查询语言（HQL）</a></li><li><a href="https://www.yiibai.com/hibernate/hcql.html" title="Hibernate标准查询语言">Hibernate标准查询语言</a></li><li><a href="https://www.yiibai.com/hibernate/hibernate-named-query.html" title="Hibernate命名查询">Hibernate命名查询</a></li><li><a href="https://www.yiibai.com/hibernate/caching-in-hibernate.html" title="Hibernate缓存">Hibernate缓存</a></li>					
					<!--<li><a href="" title=""></a></li>-->					
				</ul>
				
			</div>
		</div>

		<div class="content" id="navs">
						
                <header class="article-header">
                    <h1 class="article-title" style="text-align:center;">Hibernate快速入门</h1>
                    <div class="article-meta" style="margin-top:20px;font-size:14px;">
						<span class="item" style="">
							<a class="btn btn-pay" id="btn-reward" target="_blank"> ¥ 我要打赏 </a>
						</span>
                        
                        

						<span class="item" style="margin-left:20px;">作者：初生不惑</span>
                        
						<span style="font-weight:bold;margin-left:24px;" id="qq-group">Java技术QQ群：227270512 / Linux QQ群：479429477</span>

                    </div>
                </header>
                <!--// article body -->
                <article>
					<a name="article-start" id="article-start"></a>
					
					<div style="padding-top: 6px;padding-bottom: 4px;float:left;width:100%;">
						<script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/hm.js"></script><script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
						<!-- 顶部_720x90 -->
						<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-1090193214637198" data-ad-slot="9805510053"></ins>
						<script>
						(adsbygoogle = window.adsbygoogle || []).push({});
						</script>
					</div>

					<div style="float:left;width:100%;heigh:30px;padding-bottom:10px;padding-top:2px;" id="adv-javalive">
						<a href="https://www.linuxprobe.com/" title="linuxprobe官方网站" target="_blank">
							<!-- // created at 2018/3/7 15:30 -->
							<img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/linuxprobe.jpg" alt="linuxprobe官方网站" style="width:100%;heigh:30px;">
						</a>
					</div>
					

					<div style="width:100%;float:left;" class="article-content">
						
						<input name="article_id" id="article_id" value="10263" type="hidden">
						<input name="artype" id="artype" value="-1" type="hidden">

						<p>Hibernate是一个开源，轻量级的ORM(对象关系映射)工具。Hibernate框架简化了java应用程序与数据库交互的开发。</p>
<p>ORM工具简化了数据创建，数据处理和数据访问。它是将对象映射到数据库中存储的数据(表)的编程技术。</p>
<blockquote>
<p>注：为什么会有这篇教程文章？答：只是想写一篇最NB的Hibernate教程入门文章。NB代表人见人爱，花见花开，车见爆胎,飞鸟落地…，最后，需要注意的是：这篇文章包教不包会！除非你从头到尾认真看完并运行所有示例代码。</p>
</blockquote>
<h2 id="h2-1-hibernate-"><a name="1. Hibernate快速入门简介" class="reference-link"></a><span class="header-link octicon octicon-link"></span>1. Hibernate快速入门简介</h2><p>本教程文章基于以下工具(软件)：</p>
<ul>
<li><strong>Hibernate 5.2.2.Final</strong></li><li><strong>Eclipse 4.6 (MARS)</strong></li></ul>
<p><strong>Hibernate.x ~ Hibernate.5 更新功能：</strong></p>
<ol>
<li><p>从<em>Hibernate 5.0</em>开始Hibernate Spatial是Hibernate项目的一部分，因此我们也可以处理GIS数据了。</p>
</li><li><p>域模型映射支持Java 8日期和时间类型。 标准SQL日期/时间类型以及支持的Java 8 <code>Date</code> / <code>Time</code>类类型之间的映射，如下所示：</p>
<ul>
<li>DATE: <code>java.time.LocalDate</code></li><li>TIME: <code>java.time.LocalTime</code>, <code>java.time.OffsetTime</code></li><li>TIMESTAMP: <code>java.time.Instant</code>, <code>java.time.LocalDateTime</code>,<code>java.time.OffsetDateTime</code> 和 <code>java.time.ZonedDateTime</code></li></ul>
</li><li><p>字节码增强机制从头重新设计，Hibernate可支持Maven和Gradle插件。可以通过字节码仪器来增强三个主要方面：</p>
<ul>
<li>懒初始化：字段可以声明为<code>LAZY</code>，只有在第一次被访问时，它们才被提取。</li><li>脏检查：实体被增强，使得它们可以跟踪在持久化上下文中加载之后变化的所有属性。</li><li>双向关联：即使开发人员仅更新单侧，但也可以自动同步双向关联的双方。</li></ul>
</li><li><p>Hibernate的原生API(Session等)已更新为使用泛型类型化。无需在获取实体时转换。</p>
</li><li><code>Hibernate 5.0</code>将其扩展到更广泛的类型(例如<code>UUID</code>)。</li><li>引用二级缓存，使实体引用能够直接存储到第二级缓存中(用于不可变实体)。</li></ol>
<h2 id="h2-2-"><a name="2. 准备数据库" class="reference-link"></a><span class="header-link octicon octicon-link"></span>2. 准备数据库</h2><p>Hibernate是一个库，为了处理所有类型的数据库，它不依赖于应用程序选择的任何类型的数据库，如果Java是“一次写入到处运行”的语言，Hibernate则是“写一次就可运行在所有类型的数据库“中的框架。</p>
<p>在这篇文章中，使用的是MySQL数据(你可使用其它的数据库，如：Oracle，MySQL或SQL Server)，并创建一个简单的数据库：<code>mydb</code>，完整的数据库创建语句如下所示：</p>
<p>创建数据：</p>
<pre class="language-sql code-toolbar"><code class=" language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> mydb <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><span>SQL</span></div></div></pre>
<p>需要创建以下几张表，它们的关系图如下所示 -</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/972160530_95082.png" alt=""></p>
<p>创建表语句：</p>
<pre class="language-sql code-toolbar"><code class=" language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> DEPARTMENT <span class="token punctuation">(</span>
   DEPT_ID <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   DEPT_NAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   DEPT_NO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   LOCATION <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">unique</span> <span class="token punctuation">(</span>DEPT_NO<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> EMPLOYEE <span class="token punctuation">(</span>
   EMP_ID <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   EMP_NAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   EMP_NO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   HIRE_DATE <span class="token keyword">date</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   IMAGE <span class="token keyword">longblob</span><span class="token punctuation">,</span>
   JOB <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   SALARY <span class="token keyword">float</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   DEPT_ID <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   MNG_ID <span class="token keyword">bigint</span><span class="token punctuation">,</span>
   <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">unique</span> <span class="token punctuation">(</span>EMP_NO<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> SALARY_GRADE <span class="token punctuation">(</span>
   GRADE <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   HIGH_SALARY <span class="token keyword">float</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   LOW_SALARY <span class="token keyword">float</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>GRADE<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> TIMEKEEPER <span class="token punctuation">(</span>
   Timekeeper_Id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   Date_Time <span class="token keyword">datetime</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   In_Out char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   EMP_ID <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>Timekeeper_Id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> EMPLOYEE
   <span class="token keyword">add</span> <span class="token keyword">index</span> FK75C8D6AE269A3C9 <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">add</span> <span class="token keyword">constraint</span> FK75C8D6AE269A3C9
   <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">)</span>
   <span class="token keyword">references</span> DEPARTMENT <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> EMPLOYEE
   <span class="token keyword">add</span> <span class="token keyword">index</span> FK75C8D6AE6106A42 <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">add</span> <span class="token keyword">constraint</span> FK75C8D6AE6106A42
   <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span>
   <span class="token keyword">references</span> EMPLOYEE <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> EMPLOYEE
   <span class="token keyword">add</span> <span class="token keyword">index</span> FK75C8D6AE13C12F64 <span class="token punctuation">(</span>MNG_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">add</span> <span class="token keyword">constraint</span> FK75C8D6AE13C12F64
   <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>MNG_ID<span class="token punctuation">)</span>
   <span class="token keyword">references</span> EMPLOYEE <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> TIMEKEEPER
   <span class="token keyword">add</span> <span class="token keyword">index</span> FK744D9BFF6106A42 <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token keyword">add</span> <span class="token keyword">constraint</span> FK744D9BFF6106A42
   <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span>
   <span class="token keyword">references</span> EMPLOYEE <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><span>SQL</span></div></div></pre>
<p>向上面创建的表中，分别插入一些测试数据，如下所示 -</p>
<pre class="language-sql code-toolbar"><code class=" language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> Department <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">,</span> DEPT_NAME<span class="token punctuation">,</span> DEPT_NO<span class="token punctuation">,</span> LOCATION<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'ACCOUNTING'</span><span class="token punctuation">,</span> <span class="token string">'D10'</span><span class="token punctuation">,</span> <span class="token string">'NEW YORK'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Department <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">,</span> DEPT_NAME<span class="token punctuation">,</span> DEPT_NO<span class="token punctuation">,</span> LOCATION<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'RESEARCH'</span><span class="token punctuation">,</span> <span class="token string">'D20'</span><span class="token punctuation">,</span> <span class="token string">'DALLAS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Department <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">,</span> DEPT_NAME<span class="token punctuation">,</span> DEPT_NO<span class="token punctuation">,</span> LOCATION<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">'SALES'</span><span class="token punctuation">,</span> <span class="token string">'D30'</span><span class="token punctuation">,</span> <span class="token string">'CHICAGO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Department <span class="token punctuation">(</span>DEPT_ID<span class="token punctuation">,</span> DEPT_NAME<span class="token punctuation">,</span> DEPT_NO<span class="token punctuation">,</span> LOCATION<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">'OPERATIONS'</span><span class="token punctuation">,</span> <span class="token string">'D40'</span><span class="token punctuation">,</span> <span class="token string">'BOSTON'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-------------------------------------------------------------------------------------------------</span>


<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7839</span><span class="token punctuation">,</span> <span class="token string">'KING'</span><span class="token punctuation">,</span> <span class="token string">'E7839'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'17-11-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'PRESIDENT'</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7566</span><span class="token punctuation">,</span> <span class="token string">'JONES'</span><span class="token punctuation">,</span> <span class="token string">'E7566'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'02-04-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MANAGER'</span><span class="token punctuation">,</span> <span class="token number">2975</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7839</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7902</span><span class="token punctuation">,</span> <span class="token string">'FORD'</span><span class="token punctuation">,</span> <span class="token string">'E7902'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'03-12-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'ANALYST'</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7566</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7369</span><span class="token punctuation">,</span> <span class="token string">'SMITH'</span><span class="token punctuation">,</span> <span class="token string">'E7369'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'17-12-1980'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'CLERK'</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7902</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7698</span><span class="token punctuation">,</span> <span class="token string">'BLAKE'</span><span class="token punctuation">,</span> <span class="token string">'E7698'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'01-05-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MANAGER'</span><span class="token punctuation">,</span> <span class="token number">2850</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7839</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7499</span><span class="token punctuation">,</span> <span class="token string">'ALLEN'</span><span class="token punctuation">,</span> <span class="token string">'E7499'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'20-02-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'SALESMAN'</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7521</span><span class="token punctuation">,</span> <span class="token string">'WARD'</span><span class="token punctuation">,</span> <span class="token string">'E7521'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'22-02-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'SALESMAN'</span><span class="token punctuation">,</span> <span class="token number">1250</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7654</span><span class="token punctuation">,</span> <span class="token string">'MARTIN'</span><span class="token punctuation">,</span> <span class="token string">'E7654'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'28-09-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'SALESMAN'</span><span class="token punctuation">,</span> <span class="token number">1250</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7782</span><span class="token punctuation">,</span> <span class="token string">'CLARK'</span><span class="token punctuation">,</span> <span class="token string">'E7782'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'09-06-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MANAGER'</span><span class="token punctuation">,</span> <span class="token number">2450</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7839</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7788</span><span class="token punctuation">,</span> <span class="token string">'SCOTT'</span><span class="token punctuation">,</span> <span class="token string">'E7788'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'19-04-1987'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'ANALYST'</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7566</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7844</span><span class="token punctuation">,</span> <span class="token string">'TURNER'</span><span class="token punctuation">,</span> <span class="token string">'E7844'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'08-09-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'SALESMAN'</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7876</span><span class="token punctuation">,</span> <span class="token string">'ADAMS'</span><span class="token punctuation">,</span> <span class="token string">'E7876'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'23-05-1987'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'CLERK'</span><span class="token punctuation">,</span> <span class="token number">1100</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7900</span><span class="token punctuation">,</span> <span class="token string">'ADAMS'</span><span class="token punctuation">,</span> <span class="token string">'E7900'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'03-12-1981'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'CLERK'</span><span class="token punctuation">,</span> <span class="token number">950</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Employee <span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> EMP_NAME<span class="token punctuation">,</span> EMP_NO<span class="token punctuation">,</span> HIRE_DATE<span class="token punctuation">,</span> JOB<span class="token punctuation">,</span> SALARY<span class="token punctuation">,</span> DEPT_ID<span class="token punctuation">,</span> MNG_ID<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">,</span> <span class="token string">'MILLER'</span><span class="token punctuation">,</span> <span class="token string">'E7934'</span><span class="token punctuation">,</span> Str_To_Date<span class="token punctuation">(</span><span class="token string">'23-01-1982'</span><span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'CLERK'</span><span class="token punctuation">,</span> <span class="token number">1300</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-------------------------------------------------------------------------------------------------</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> Salary_Grade <span class="token punctuation">(</span>GRADE<span class="token punctuation">,</span> HIGH_SALARY<span class="token punctuation">,</span> LOW_SALARY<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">,</span> <span class="token number">3001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><span>SQL</span></div></div></pre>
<h2 id="h2-3-maven-"><a name="3. 创建Maven项目和声明库" class="reference-link"></a><span class="header-link octicon octicon-link"></span>3. 创建Maven项目和声明库</h2><p>在这里，创建一个Maven项目并在<code>pom.xml</code>中声明使用的<code>Hibernate</code>库。打开 <em>Eclipse</em>，选择菜单 <strong>File</strong> -&gt; <strong>New</strong> -&gt; <strong>Other…</strong>，在弹出框中选择 <strong>Maven</strong>，如下所示 -</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/115160535_57737.png" alt=""></p>
<p>下一步选择工作目录，如下图所示 -</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/166160536_51012.png" alt=""></p>
<p>下一步，选择模板类型，如下图所示 -</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/836160538_86654.png" alt=""></p>
<p>下一步，写入工程名称：<em>HibernateQuickStart</em>，以及输入包信息：<code>com.yiibai</code> 等信息。</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/184160541_43711.png" alt=""></p>
<p>项目(<em>HibernateQuickStart</em>)创建完成后，如下图所示 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/122160546_86480.png" alt=""></p>
<p>在<code>pom.xml</code>中，需要声明使用<code>Hibernate 5</code>库，以及用于各种数据库类型(如Oracle，MySQL和SQL Server)的JDBC库，这里使用 MySQL JDBC。</p>
<p>完整的 <em>pom.xml</em> 配置/声明如下所示 - </p>
<pre class="language-xml code-toolbar"><code class=" language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.yiibai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>HibernateQuickStart<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>HibernateQuickStart<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.apache.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- Hibernate Core --&gt;</span>
        <span class="token comment">&lt;!-- http://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.hibernate<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hibernate-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.2.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


        <span class="token comment">&lt;!-- MySQL JDBC driver --&gt;</span>
        <span class="token comment">&lt;!-- http://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.34<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- SQLServer JDBC driver (JTDS) --&gt;</span>
        <span class="token comment">&lt;!-- http://mvnrepository.com/artifact/net.sourceforge.jtds/jtds --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.sourceforge.jtds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jtds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code><div class="toolbar"><div class="toolbar-item"><span>XML</span></div></div></pre>
<h2 id="h2-4-"><a name="4. 实体类" class="reference-link"></a><span class="header-link octicon octicon-link"></span>4. 实体类</h2><p>在这一步中，我们来创建实体类。每个实体描述一个数据库中的表。这里先不说明每个类是做什么用的。一共要创建如下几个实体类(对应上面创建的四张表)，如下 - </p>
<ul>
<li>Department.java</li><li>Employee.java</li><li>SalaryGrade.java</li><li>Timekeeper.java</li></ul>
<p>所有创建的类如下图所示 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/482110547_44431.png" alt=""></p>
<p>这几个类的代码，分别如下所示 -</p>
<p><em>Department.java</em> 类代码 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToMany<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>UniqueConstraint<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DEPARTMENT"</span><span class="token punctuation">,</span> uniqueConstraints <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token annotation punctuation">@UniqueConstraint</span><span class="token punctuation">(</span>columnNames <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"DEPT_NO"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Department</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer deptId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String deptNo<span class="token punctuation">;</span>

    <span class="token keyword">private</span> String deptName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String location<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Department</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">Department</span><span class="token punctuation">(</span>Integer deptId<span class="token punctuation">,</span> String deptName<span class="token punctuation">,</span> String location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptId <span class="token operator">=</span> deptId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptNo <span class="token operator">=</span> <span class="token string">"D"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deptId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptName <span class="token operator">=</span> deptName<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>location <span class="token operator">=</span> location<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DEPT_ID"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Integer <span class="token function">getDeptId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deptId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDeptId</span><span class="token punctuation">(</span>Integer deptId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptId <span class="token operator">=</span> deptId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DEPT_NO"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deptNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDeptNo</span><span class="token punctuation">(</span>String deptNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptNo <span class="token operator">=</span> deptNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DEPT_NAME"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getDeptName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deptName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDeptName</span><span class="token punctuation">(</span>String deptName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deptName <span class="token operator">=</span> deptName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"LOCATION"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> location<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLocation</span><span class="token punctuation">(</span>String location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>location <span class="token operator">=</span> location<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">,</span> mappedBy <span class="token operator">=</span> <span class="token string">"department"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> employees<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmployees</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>employees <span class="token operator">=</span> employees<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p><em>Employee.java</em> 类代码 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinColumn<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Lob<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>ManyToOne<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToMany<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Temporal<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>TemporalType<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>UniqueConstraint<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EMPLOYEE"</span><span class="token punctuation">,</span> uniqueConstraints <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token annotation punctuation">@UniqueConstraint</span><span class="token punctuation">(</span>columnNames <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"EMP_NO"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Long empId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String empNo<span class="token punctuation">;</span>

    <span class="token keyword">private</span> String empName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String job<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Employee manager<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Date hideDate<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Float salary<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> image<span class="token punctuation">;</span>

    <span class="token keyword">private</span> Department department<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">Employee</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">,</span> String empName<span class="token punctuation">,</span> String job<span class="token punctuation">,</span> Employee manager<span class="token punctuation">,</span> Date hideDate<span class="token punctuation">,</span> Float salary<span class="token punctuation">,</span> Float comm<span class="token punctuation">,</span>
            Department department<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empId <span class="token operator">=</span> empId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empNo <span class="token operator">=</span> <span class="token string">"E"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>empId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empName <span class="token operator">=</span> empName<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>manager <span class="token operator">=</span> manager<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hideDate <span class="token operator">=</span> hideDate<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>department <span class="token operator">=</span> department<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EMP_ID"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Long <span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpId</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empId <span class="token operator">=</span> empId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EMP_NO"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpNo</span><span class="token punctuation">(</span>String empNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empNo <span class="token operator">=</span> empNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EMP_NAME"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpName</span><span class="token punctuation">(</span>String empName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empName <span class="token operator">=</span> empName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"JOB"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> job<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setJob</span><span class="token punctuation">(</span>String job<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>
    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"MNG_ID"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Employee <span class="token function">getManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> manager<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setManager</span><span class="token punctuation">(</span>Employee manager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>manager <span class="token operator">=</span> manager<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"HIRE_DATE"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Temporal</span><span class="token punctuation">(</span>TemporalType<span class="token punctuation">.</span>DATE<span class="token punctuation">)</span>
    <span class="token keyword">public</span> Date <span class="token function">getHideDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hideDate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHideDate</span><span class="token punctuation">(</span>Date hideDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hideDate <span class="token operator">=</span> hideDate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"SALARY"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Float <span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> salary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSalary</span><span class="token punctuation">(</span>Float salary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"IMAGE"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">1111111</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Lob</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> image<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setImage</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> image<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>image <span class="token operator">=</span> image<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>
    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DEPT_ID"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Department <span class="token function">getDepartment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> department<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDepartment</span><span class="token punctuation">(</span>Department department<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>department <span class="token operator">=</span> department<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">,</span> mappedBy <span class="token operator">=</span> <span class="token string">"empId"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> employees<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmployees</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>employees <span class="token operator">=</span> employees<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p><em>SalaryGrade.java</em> 类代码 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"SALARY_GRADE"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SalaryGrade</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer grade<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Float lowSalary<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Float highSalary<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">SalaryGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">SalaryGrade</span><span class="token punctuation">(</span>Integer grade<span class="token punctuation">,</span> Float lowSalary<span class="token punctuation">,</span> Float highSalary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lowSalary <span class="token operator">=</span> lowSalary<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>highSalary <span class="token operator">=</span> highSalary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"GRADE"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Integer <span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> grade<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setGrade</span><span class="token punctuation">(</span>Integer grade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"LOW_SALARY"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Float <span class="token function">getLowSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> lowSalary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLowSalary</span><span class="token punctuation">(</span>Float lowSalary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lowSalary <span class="token operator">=</span> lowSalary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"HIGH_SALARY"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Float <span class="token function">getHighSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> highSalary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHighSalary</span><span class="token punctuation">(</span>Float highSalary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>highSalary <span class="token operator">=</span> highSalary<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p><em>Timekeeper.java</em> 类代码 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>FetchType<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinColumn<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>ManyToOne<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Temporal<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>TemporalType<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>GenericGenerator<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"TIMEKEEPER"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Timekeeper</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span> IN <span class="token operator">=</span> <span class="token string">'I'</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span> OUT <span class="token operator">=</span> <span class="token string">'O'</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> String timekeeperId<span class="token punctuation">;</span>

    <span class="token keyword">private</span> Date dateTime<span class="token punctuation">;</span>

    <span class="token keyword">private</span> Employee employee<span class="token punctuation">;</span>

    <span class="token comment">// 'I' or 'O'</span>
    <span class="token keyword">private</span> <span class="token keyword">char</span> inOut<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>generator <span class="token operator">=</span> <span class="token string">"uuid"</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GenericGenerator</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"uuid"</span><span class="token punctuation">,</span> strategy <span class="token operator">=</span> <span class="token string">"uuid2"</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Timekeeper_Id"</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> String <span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> timekeeperId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTimekeeperId</span><span class="token punctuation">(</span>String timekeeperId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timekeeperId <span class="token operator">=</span> timekeeperId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Date_Time"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Temporal</span><span class="token punctuation">(</span>TemporalType<span class="token punctuation">.</span>TIMESTAMP<span class="token punctuation">)</span>
    <span class="token keyword">public</span> Date <span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> dateTime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDateTime</span><span class="token punctuation">(</span>Date dateTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>dateTime <span class="token operator">=</span> dateTime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>
    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EMP_ID"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Employee <span class="token function">getEmployee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> employee<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmployee</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>employee <span class="token operator">=</span> employee<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"In_Out"</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">char</span> <span class="token function">getInOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> inOut<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInOut</span><span class="token punctuation">(</span><span class="token keyword">char</span> inOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inOut <span class="token operator">=</span> inOut<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<h2 id="h2-5-hibernate"><a name="5. 配置hibernate" class="reference-link"></a><span class="header-link octicon octicon-link"></span>5. 配置hibernate</h2><p>配置hibernate目的是让Hibernate可以连接数据库并与数据库交互，并声明在前面的步骤中创建的实体列表。</p>
<p>在<em>src/main/java</em>中创建一个名称为：<em>hibernate.cfg.xml</em> 的配置文件，当前项目结构如下图所示 - </p>
<p><em>hibernate.cfg.xml</em> 配置文件的内容如下所示 -</p>
<pre class="language-xml code-toolbar"><code class=" language-xml"><span class="token prolog">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span>
<span class="token doctype">&lt;!DOCTYPE hibernate-configuration PUBLIC
"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hibernate-configuration</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>session-factory</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- Database connection settings --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connection.driver_class<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connection.url<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>jdbc:mysql://localhost:3306/mydb?serverTimezone=UTC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connection.username<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connection.password<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- JDBC connection pool (use the built-in) --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connection.pool_size<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- SQL dialect --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialect<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- Enable Hibernate's automatic session context management --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current_session_context_class<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>thread<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- Disable the second-level cache --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cache.provider_class<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>org.hibernate.cache.internal.NoCacheProvider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- Echo all executed SQL to stdout --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show_sql<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yiibai.entities.Department<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yiibai.entities.Employee<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yiibai.entities.SalaryGrade<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yiibai.entities.Timekeeper<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>session-factory</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hibernate-configuration</span><span class="token punctuation">&gt;</span></span>
</code><div class="toolbar"><div class="toolbar-item"><span>XML</span></div></div></pre>
<p>每种数据库都有一个单独的方言， 例如：</p>
<p><strong>Oracle方言：</strong></p>
<ul>
<li>org.hibernate.dialect.Oracle10gDialect(Dùngcho 10g＆11g)</li><li>org.hibernate.dialect.Oracle12cDialect</li></ul>
<p><strong>SQL Server方言：</strong></p>
<ul>
<li>org.hibernate.dialect.SQLServerDialect并</li><li>org.hibernate.dialect.SQLServer2012Dialect</li><li>org.hibernate.dialect.SQLServer2008Dialect</li></ul>
<p><strong>MySQL方言</strong></p>
<ul>
<li>org.hibernate.dialect.MySQLDialect</li><li>org.hibernate.dialect.MySQL5Dialect</li></ul>
<h3 id="h3--"><a name="什么是方言？" class="reference-link"></a><span class="header-link octicon octicon-link"></span>什么是方言？</h3><p><code>Dialect</code>是一个使用Hibernate的方式将数据库的数据类型转换为Java的数据类型，反之亦然。此外，它用于定义将HSQL(Hibernate SQL)的函数转换为数据中的函数的方式，如下列出的一部分 - </p>
<table>
<thead>
<tr>
<th>Java SQL类型</th>
<th>Oracle</th>
<th>MySQL</th>
<th>SQL Server</th>
</tr>
</thead>
<tbody>
<tr>
<td>Types.BIT</td>
<td>number(1,0)</td>
<td>bit</td>
<td>bit</td>
</tr>
<tr>
<td>Types.BIGINT</td>
<td>number(19,0)</td>
<td>bigin</td>
<td>bigint</td>
</tr>
<tr>
<td>Types.DATE</td>
<td>date</td>
<td>date</td>
<td>date</td>
</tr>
<tr>
<td>…….</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>Types.CLOB</td>
<td>clob</td>
<td>longtext</td>
<td>varchar(MAX)</td>
</tr>
<tr>
<td>Types.BLOB</td>
<td>blob</td>
<td>longblob</td>
<td>varbinary(MAX)</td>
</tr>
</tbody>
</table>
<h2 id="h2-6-sessionfactory"><a name="6. SessionFactory" class="reference-link"></a><span class="header-link octicon octicon-link"></span>6. SessionFactory</h2><p>创建一个文件： HibernateUtils.java ， 其代码如下 -</p>
<pre class="language-java code-toolbar"><code class=" language-java">

</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<h2 id="h2-7-hibernate-hql-"><a name="7. Hibernate查询语言(HQL)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>7. Hibernate查询语言(HQL)</h2><p>Hibernate使用Hibernate查询语言(HQL)查询数据。 HQL与我们所了解的数据库SQL语句有点不同。</p>
<p><strong>SQL：</strong></p>
<ul>
<li>在表中查询数据</li></ul>
<p><strong>HQL：</strong></p>
<ul>
<li>在实体类中查询对象数据</li></ul>
<p>参考比较以下用法 - </p>
<pre class="language-sql code-toolbar"><code class=" language-sql"><span class="token comment">-- SQL</span>
<span class="token comment">-- This is a SQL query in table DEPARTMENT.</span>
<span class="token keyword">Select</span> <span class="token number">d</span><span class="token punctuation">.</span>DEPT_NO<span class="token punctuation">,</span> <span class="token number">d</span><span class="token punctuation">.</span>DEPT_NAME <span class="token keyword">from</span> DEPARTMENT <span class="token number">d</span><span class="token punctuation">;</span>

<span class="token comment">-- HQL</span>
<span class="token comment">-- This is a HQL query in Entity Department.</span>
<span class="token keyword">Select</span> <span class="token number">d</span><span class="token punctuation">.</span>deptNo<span class="token punctuation">,</span> <span class="token number">d</span><span class="token punctuation">.</span>deptName <span class="token keyword">from</span> Department <span class="token number">d</span><span class="token punctuation">;</span>

<span class="token comment">-- Query Object</span>
<span class="token keyword">Select</span> <span class="token number">d</span> <span class="token keyword">from</span> Department <span class="token number">d</span><span class="token punctuation">;</span>
</code><div class="toolbar"><div class="toolbar-item"><span>SQL</span></div></div></pre>
<p><strong>Hibernate的操作规则：</strong></p>
<p>应用程序编写的HQL在操作过程中，Hibernate本身就意识到它使用的数据库类型(如：MySQL)，它会自动将HQL转换为等价的数据库类
型的SQL形式。 事实上，各种类型的数据库之间的SQL语法有一些差异，比如：返回记录的行数的限制就不同(MySQL中使用 <code>limit</code> 子句)。</p>
<blockquote>
<p>可以参考HQL语法： <a target="_blank" href="http://docs.jboss.org/hibernate/orm/3.6/reference/en-US/html/queryhql.html">http://docs.jboss.org/hibernate/orm/3.6/reference/en-US/html/queryhql.html</a></p>
</blockquote>
<h2 id="h2-8-hibernate-"><a name="8. 使用Hibernate查询数据" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8. 使用Hibernate查询数据</h2><p>在Hibernate中有很多方法可以用来查询数据。在这部分中，将介绍一些查询数据的典型方法。</p>
<h3 id="h3-8-1-hql-"><a name="8.1 - 使用HQL的查询对象" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8.1 - 使用HQL的查询对象</h3><p><strong>查询对象示例-1</strong><br>第一个例子，使用HQL查询对象(Entity)，创建一个Java类文件：<em>QueryObjectDemo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryObjectDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span> <span class="token punctuation">{</span>

           <span class="token comment">// All the action with DB via Hibernate</span>
           <span class="token comment">// must be located in one transaction.</span>
           <span class="token comment">// Start Transaction.            </span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Create an HQL statement, query the object.</span>
           <span class="token comment">// Equivalent to the SQL statement:</span>
           <span class="token comment">// Select e.* from EMPLOYEE e order by e.EMP_NAME, e.EMP_NO</span>
           String sql <span class="token operator">=</span> <span class="token string">"Select e from "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span>
                   <span class="token operator">+</span> <span class="token string">" order by e.empName, e.empNo "</span><span class="token punctuation">;</span>


           <span class="token comment">// Create Query object.</span>
           Query<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Execute query.</span>
           List<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token keyword">for</span> <span class="token punctuation">(</span>Employee emp <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span>
                       <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>

           <span class="token comment">// Commit data.</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">// Rollback in case of an error occurred.</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/570140515_19159.png" alt=""></p>
<p><strong>查询对象示例-2</strong></p>
<p>创建一个Java类文件：<em>QueryObjectDemo2.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryObjectDemo2</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>

            <span class="token comment">// All the action with DB via Hibernate</span>
            <span class="token comment">// must be located in one transaction</span>
            <span class="token comment">// Start Transaction.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Create an HQL statement, query the object.</span>
            <span class="token comment">// HQL with parameters.</span>
            <span class="token comment">// Equivalent to the SQL statement:</span>
            <span class="token comment">// Select e.* from EMPLOYEE e cross join DEPARTMENT d</span>
            <span class="token comment">// where e.DEPT_ID = d.DEPT_ID and d.DEPT_NO = :deptNo;</span>
            String sql <span class="token operator">=</span> <span class="token string">"Select e from "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span> <span class="token operator">+</span> <span class="token string">" where e.department.deptNo=:deptNo "</span><span class="token punctuation">;</span>

            <span class="token comment">// Create query object.</span>
            Query<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>

            query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"deptNo"</span><span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Execute query.</span>
            List<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> employees <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span>Employee emp <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Commit data</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Rollback in case of an error occurred.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<pre><code>......
org.hibernate.hql.internal.QueryTranslatorFactoryInitiator initiateService
INFO: HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select employee0_.EMP_ID ..._NO=?
Emp: E7839 : KING
Emp: E7934 : MILLER
`
</code></pre><h3 id="h3-8-2-hql-"><a name="8.2 - 使用HQL查询读取多列数据" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8.2 - 使用HQL查询读取多列数据</h3><p>创建一个Java类文件：<em>QuerySomeColumnDemo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuerySomeColumnDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Query some columns.</span>
            String sql <span class="token operator">=</span> <span class="token string">"Select e.empId, e.empNo, e.empName from "</span>
                    <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span><span class="token punctuation">;</span>

            Query<span class="token operator">&lt;</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Execute Query.</span>
            <span class="token comment">// Get the array of Object</span>
            List<span class="token operator">&lt;</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> datas <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span> emp <span class="token operator">:</span> datas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp Id: "</span> <span class="token operator">+</span> emp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"    Emp No: "</span> <span class="token operator">+</span> emp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"    Emp Name: "</span> <span class="token operator">+</span> emp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Commit data.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Rollback in case of an error occurred.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<pre><code>Hibernate: select employee0_.EMP_ID..._0_ from EMPLOYEE employee0_
Emp Id: 7369
    Emp No: E7369
    Emp Name: SMITH
Emp Id: 7499
    Emp No: E7499
    Emp Name: ALLEN
Emp Id: 7521
    Emp No: E7521
    Emp Name: WARD
Emp Id: 7566
    Emp No: E7566
    Emp Name: JONES
Emp Id: 7654
    Emp No: E7654
    Emp Name: MARTIN
Emp Id: 7698
    Emp No: E7698
    Emp Name: BLAKE
Emp Id: 7782
    Emp No: E7782
    Emp Name: CLARK
Emp Id: 7788
    Emp No: E7788
    Emp Name: SCOTT
Emp Id: 7839
    Emp No: E7839
    Emp Name: KING
Emp Id: 7844
    Emp No: E7844
    Emp Name: TURNER
Emp Id: 7876
    Emp No: E7876
    Emp Name: ADAMS
Emp Id: 7900
    Emp No: E7900
    Emp Name: ADAMS
Emp Id: 7902
    Emp No: E7902
    Emp Name: FORD
Emp Id: 7934
    Emp No: E7934
    Emp Name: MILLER
`
</code></pre><h3 id="h3-8-3-hql-javabean-"><a name="8.3 - 使用HQL和JavaBean查询多列数据" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8.3 - 使用HQL和JavaBean查询多列数据</h3><p>在这种情况下，如果需要在某些表中提取某些列的数据，最好的方法是使用Java bean。使用Java bean的构造函数来为不同的字段设置值。在此构造函数加入HQL查询。</p>
<p>创建一个Java类文件：<em>ShortEmpInfo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShortEmpInfo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Long empId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String empNo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String empName<span class="token punctuation">;</span>

    <span class="token comment">//</span>
    <span class="token comment">// Constructor have 3 parameters, will be used in the Hibernate Query.</span>
    <span class="token comment">//</span>
    <span class="token keyword">public</span> <span class="token function">ShortEmpInfo</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">,</span> String empNo<span class="token punctuation">,</span> String empName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empId <span class="token operator">=</span> empId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empNo <span class="token operator">=</span> empNo<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empName <span class="token operator">=</span> empName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Long <span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpId</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empId <span class="token operator">=</span> empId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpNo</span><span class="token punctuation">(</span>String empNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empNo <span class="token operator">=</span> empNo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> empName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmpName</span><span class="token punctuation">(</span>String empName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>empName <span class="token operator">=</span> empName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>创建一个Java类文件：<em>ShortEmpInfoQueryDemo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShortEmpInfoQueryDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Using constructor of ShortEmpInfo</span>
            String sql <span class="token operator">=</span> <span class="token string">"Select new "</span> <span class="token operator">+</span> ShortEmpInfo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">"(e.empId, e.empNo, e.empName)"</span> <span class="token operator">+</span> <span class="token string">" from "</span>
                    <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span><span class="token punctuation">;</span>

            Query<span class="token operator">&lt;</span>ShortEmpInfo<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token comment">// Execute query.</span>
            <span class="token comment">// Get a List of ShortEmpInfo</span>
            List<span class="token operator">&lt;</span>ShortEmpInfo<span class="token operator">&gt;</span> employees <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span>ShortEmpInfo emp <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span>
                        <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Commit data.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Rollback in case of an error occurred.</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/207140522_47759.png" alt=""></p>
<h3 id="h3-8-4-"><a name="8.4 - 查询检索唯一结果" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8.4 - 查询检索唯一结果</h3><p>创建一个Java类文件：<em>UniqueResultDemo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UniqueResultDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> Department <span class="token function">getDepartment</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> String deptNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String sql <span class="token operator">=</span> <span class="token string">"Select d from "</span> <span class="token operator">+</span> Department<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" d "</span><span class="token comment">//</span>
                <span class="token operator">+</span> <span class="token string">" where d.deptNo= :deptNo "</span><span class="token punctuation">;</span>
        Query<span class="token operator">&lt;</span>Department<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"deptNo"</span><span class="token punctuation">,</span> deptNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> query<span class="token punctuation">.</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> Employee <span class="token function">getEmployee</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> Long empId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        String sql <span class="token operator">=</span> <span class="token string">"Select e from "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span><span class="token comment">//</span>
                <span class="token operator">+</span> <span class="token string">" where e.empId= :empId "</span><span class="token punctuation">;</span>
        Query<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"empId"</span><span class="token punctuation">,</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>Employee<span class="token punctuation">)</span> query<span class="token punctuation">.</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            Department dept <span class="token operator">=</span> <span class="token function">getDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Set<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> emps <span class="token operator">=</span> dept<span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Dept Name: "</span> <span class="token operator">+</span> dept<span class="token punctuation">.</span><span class="token function">getDeptName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Employee emp <span class="token operator">:</span> emps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" Emp name: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            Employee emp <span class="token operator">=</span> <span class="token function">getEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> 7839L<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp Name: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/734140525_97762.png" alt=""></p>
<h2 id="h2-9-hibernate-"><a name="9. Hibernate瞬态，持久和分离" class="reference-link"></a><span class="header-link octicon octicon-link"></span>9. Hibernate瞬态，持久和分离</h2><p>在这部分中，使用<code>Session.persist(Object)</code>将瞬态对象插入数据库的简单示例。本例中将介绍对象瞬态(Transitent)，持久(Persistent)和分离(Detached)的概念。</p>
<p>创建一个Java类文件：<em>DataUtils.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataUtils</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> Department <span class="token function">findDepartment</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> String deptNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       String sql <span class="token operator">=</span> <span class="token string">"Select d from "</span> <span class="token operator">+</span> Department<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" d "</span><span class="token comment">//</span>
               <span class="token operator">+</span> <span class="token string">" Where d.deptNo = :deptNo"</span><span class="token punctuation">;</span>
       Query<span class="token operator">&lt;</span>Department<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
       query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"deptNo"</span><span class="token punctuation">,</span> deptNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> query<span class="token punctuation">.</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">getMaxEmpId</span><span class="token punctuation">(</span>Session session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       String sql <span class="token operator">=</span> <span class="token string">"Select max(e.empId) from "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span><span class="token punctuation">;</span>
       Query<span class="token operator">&lt;</span>Number<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
       Number value <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> 0L<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> Employee <span class="token function">findEmployee</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> String empNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       String sql <span class="token operator">=</span> <span class="token string">"Select e from "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span><span class="token comment">//</span>
               <span class="token operator">+</span> <span class="token string">" Where e.empNo = :empNo"</span><span class="token punctuation">;</span>
       Query<span class="token operator">&lt;</span>Employee<span class="token operator">&gt;</span> query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
       query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"empNo"</span><span class="token punctuation">,</span> empNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> query<span class="token punctuation">.</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>创建一个Java类文件：<em>PersistDemo.java</em>，其代码如下 - </p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersistDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Department department <span class="token operator">=</span> null<span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           Long maxEmpId <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">getMaxEmpId</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
           Long empId <span class="token operator">=</span> maxEmpId <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

           <span class="token comment">// Get Persistent object.</span>
           department <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Create transient object</span>
           emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpId</span><span class="token punctuation">(</span>empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpNo</span><span class="token punctuation">(</span><span class="token string">"E"</span> <span class="token operator">+</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpName</span><span class="token punctuation">(</span><span class="token string">"Name "</span> <span class="token operator">+</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setJob</span><span class="token punctuation">(</span><span class="token string">"Coder"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">1000f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setManager</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setHideDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setDepartment</span><span class="token punctuation">(</span>department<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Using persist(..)</span>
           <span class="token comment">// Now 'emp' is managed by Hibernate.</span>
           <span class="token comment">// it has Persistent status.</span>
           <span class="token comment">// No action at this time with DB.</span>
           session<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// At this step the data is pushed to the DB.</span>
           <span class="token comment">// Execute Insert statement.</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token comment">// After the session is closed (commit, rollback, close)</span>
       <span class="token comment">// Objects 'emp', 'dept' became the Detached objects.</span>
       <span class="token comment">// It is no longer in the control of the session.        </span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp No: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>运行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/149140528_88930.png" alt=""></p>
<h2 id="h2-10-hibernate-"><a name="10. Hibernate生命周期" class="reference-link"></a><span class="header-link octicon octicon-link"></span>10. Hibernate生命周期</h2><p>Hibernate的Session类的有一些/几组的重要方法，如下图所示：</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/931170555_26701.png" alt=""></p>
<p>Hibernate中的一个对象存在于以下四个状态之中的一种：</p>
<ul>
<li><strong>短暂(Transient)</strong></li><li><strong>持久(Persistent)</strong></li><li><strong>Removed</strong></li><li><strong>Detached</strong></li></ul>
<p>以上几个状态在下面图中解释：</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/689170557_42799.png" alt=""></p>
<p>下面来看这几个状态的流转说明 -</p>
<ol>
<li><p>当从一个实体创建一个新的Java对象时，该对象处于“短暂”状态。 Hibernate不知道它的存在，因为它独立于Hibernate的管理。</p>
</li><li><p>如果使用方法：<code>get</code>，<code>load</code>或<code>find</code>获取实体对象，则将获得一个等同于数据库中的<code>1</code>条记录的对象。 此对象处于<strong>Persistent</strong>状态。 它由Hibernate管理。</p>
</li><li><p>会话调用方法：<code>save</code>，<code>saveOrUpdate</code>和<code>persist</code>。 合并将短暂(Transient)对象置于Hibernate的管理之下，此对象转为持久化(<strong>Persistent</strong>)状态。 在使用的具体情况下，它向数据库插入或更新数据。</p>
</li><li><p><code>Session</code>调用<code>evict(..)</code>或<code>clear()</code>，以便从处于Hibernate管理状态的对象处于关闭状态，并且这些对象处于分离(<code>Detached</code>)的状态。</p>
</li><li><p>使用<code>update(..)</code>，<code>saveOrUpdate(..)</code>，<code>merge(..)</code>将有助于重新连接分离对象。 在具体情况下，它会向数据库中创建更新或插入数据。 对象转回持久化(Persistent)状态。</p>
</li><li><p><code>Session</code>调用方法：<code>remove(..)</code>，<code>delete(..)</code>删除除记录并持久化对象。</p>
</li></ol>
<h2 id="h2-11-hibernate-"><a name="11. 用Hibernate插入，更新，删除" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11. 用Hibernate插入，更新，删除</h2><h3 id="h3-11-1-persistent-"><a name="11.1 - 持久化(Persistent)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.1 - 持久化(Persistent)</h3><p>当一个对像使用 <code>Session</code> 的<code>get()</code>,<code>load()</code>,<code>find()</code>方法获取关联数据时，它处于持久化(Persistent)状态。</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/538100537_54337.png" alt=""></p>
<p>创建一个JAVA类文件：<em>PersistentDemo.java</em>，用于演示对象的持久化(Persistent)状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersistentDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Department department <span class="token operator">=</span> null<span class="token punctuation">;</span>

       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Finding Department deptNo = D10..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Persistent object.</span>
           department <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- First change Location"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Changing something on Persistent object.</span>
           department<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token string">"Chicago "</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Location = "</span> <span class="token operator">+</span> department<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Calling flush..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Use session.flush () to actively push the changes to the DB.</span>
           <span class="token comment">// It works for all changed Persistent objects.</span>
           session<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Flush OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Second change Location"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Change something on Persistent object</span>
           department<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token string">"Chicago "</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Print out location</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Location = "</span> <span class="token operator">+</span> department<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Calling commit..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Commit</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Commit OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token comment">// Create the session after it had been closed earlier</span>
       <span class="token comment">// (Cause by commit or update)</span>
       session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Finding Department deptNo = D10..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Query lại Department D10.</span>

           department <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Print out location</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- D10 Location = "</span> <span class="token operator">+</span> department<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/839140534_80005.png" alt=""></p>
<h3 id="h3-11-2-"><a name="11.2 - 瞬态转为持久化状态" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.2 - 瞬态转为持久化状态</h3><p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/136100541_18091.png" alt=""></p>
<h3 id="h3-11-3-persist-object-"><a name="11.3 - 瞬态转为持久化状态：使用persist(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.3 - 瞬态转为持久化状态：使用persist(Object)</h3><p>创建一个JAVA类文件：<em>PersistTransientDemo.java</em>，用于演示对象的持久化(Persistent)状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Timekeeper<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersistTransientDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> DateFormat df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"dd-MM-yyyy HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> Timekeeper <span class="token function">persist_Transient</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// Note:</span>
       <span class="token comment">// Configuring of timekeeperId</span>
       <span class="token comment">// @GeneratedValue(generator = "uuid")</span>
       <span class="token comment">// @GenericGenerator(name = "uuid", strategy = "uuid2")            </span>
       Timekeeper tk1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timekeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       tk1<span class="token punctuation">.</span><span class="token function">setEmployee</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk1<span class="token punctuation">.</span><span class="token function">setInOut</span><span class="token punctuation">(</span>Timekeeper<span class="token punctuation">.</span>IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk1<span class="token punctuation">.</span><span class="token function">setDateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Now, 'tk1' is transient object</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk1 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====== CALL persist(tk).... ==========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Hibernate assign value to Id of 'tk1'</span>
       <span class="token comment">// No action to DB.</span>
       session<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>tk1<span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out
               <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk1.getTimekeeperId() = "</span> <span class="token operator">+</span> tk1<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Now 'tk1' is Persistent object.</span>
       <span class="token comment">// But no action with DB.</span>
       <span class="token comment">// ==&gt; true</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk1 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Call flush.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Flush data to DB.</span>
       <span class="token comment">// Hibernate execute insert statement.</span>
       session<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       String timekeeperId <span class="token operator">=</span> tk1<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- timekeeperId = "</span> <span class="token operator">+</span> timekeeperId<span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- inOut = "</span> <span class="token operator">+</span> tk1<span class="token punctuation">.</span><span class="token function">getInOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- dateTime = "</span> <span class="token operator">+</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tk1<span class="token punctuation">.</span><span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> tk1<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token function">persist_Transient</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/345140536_10445.png" alt=""></p>
<h3 id="h3-11-4-save-object-"><a name="11.4 - 瞬态转为持久化状态：使用save(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.4 - 瞬态转为持久化状态：使用save(Object)</h3><p>创建一个JAVA类文件：<em>SaveTransientDemo.java</em>，用于演示对象的持久化(Persistent)状态。</p>
<script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
							<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-1090193214637198" data-ad-slot="6494738921"></ins>
							<script>
							(adsbygoogle = window.adsbygoogle || []).push({});
							</script><pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Timekeeper<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaveTransientDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> DateFormat df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"dd-MM-yyyy HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> Timekeeper <span class="token function">persist_Transient</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span> Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// See configuration of timekeeperId:</span>
       <span class="token comment">// @GeneratedValue(generator = "uuid")</span>
       <span class="token comment">// @GenericGenerator(name = "uuid", strategy = "uuid2")</span>
       <span class="token comment">// Create an Object, Transitent state.        </span>
       Timekeeper tk2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timekeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       tk2<span class="token punctuation">.</span><span class="token function">setEmployee</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk2<span class="token punctuation">.</span><span class="token function">setInOut</span><span class="token punctuation">(</span>Timekeeper<span class="token punctuation">.</span>IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk2<span class="token punctuation">.</span><span class="token function">setDateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Now 'tk3' are state Transient.        </span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk2 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====== CALL save(tk).... ==========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// save() very similar to persist()</span>
       <span class="token comment">// save() return ID, persist() return void.</span>
       <span class="token comment">// Hibernate assign ID value to 'tk2', no action with DB</span>
       <span class="token comment">// And return ID of 'tk2'.        </span>
       Serializable id <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>tk2<span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- id = "</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">//</span>
       System<span class="token punctuation">.</span>out
               <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk2.getTimekeeperId() = "</span> <span class="token operator">+</span> tk2<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Now, 'tk2' has Persistent state</span>
       <span class="token comment">// It has been managed in Session.</span>
       <span class="token comment">// ==&gt; true</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk2 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Call flush.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// To push data into the DB, call flush().</span>
       <span class="token comment">// If not call flush() data will be pushed to the DB when calling commit().</span>
       <span class="token comment">// Will execute insert statement.</span>
       session<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       String timekeeperId <span class="token operator">=</span> tk2<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- timekeeperId = "</span> <span class="token operator">+</span> timekeeperId<span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- inOut = "</span> <span class="token operator">+</span> tk2<span class="token punctuation">.</span><span class="token function">getInOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- dateTime = "</span> <span class="token operator">+</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tk2<span class="token punctuation">.</span><span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> tk2<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token function">persist_Transient</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/796140538_78034.png" alt=""></p>
<h3 id="h3-11-5-saveorupdate-object-"><a name="11.5 - 瞬态转为持久化状态：使用saveOrUpdate(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.5 - 瞬态转为持久化状态：使用saveOrUpdate(Object)</h3><p>创建一个JAVA类文件：<em>SaveOrUpdateTransientDemo.java</em>，用于演示对象的持久化(Persistent)状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Timekeeper<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaveOrUpdateTransientDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> DateFormat df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"dd-MM-yyyy HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> Timekeeper <span class="token function">saveOrUpdate_Transient</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span>
           Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// See configuration of timekeeperId:</span>
       <span class="token comment">// @GeneratedValue(generator = "uuid")</span>
       <span class="token comment">// @GenericGenerator(name = "uuid", strategy = "uuid2")</span>
       <span class="token comment">// Create an Object, Transitent state.</span>
       Timekeeper tk3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timekeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       tk3<span class="token punctuation">.</span><span class="token function">setEmployee</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk3<span class="token punctuation">.</span><span class="token function">setInOut</span><span class="token punctuation">(</span>Timekeeper<span class="token punctuation">.</span>IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk3<span class="token punctuation">.</span><span class="token function">setDateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Now 'tk3' are state Transient.</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk3 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====== CALL saveOrUpdate(tk).... ==========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Here Hibernate checks, 'tk3' have ID or not (timekeeperId)</span>
       <span class="token comment">// If no, it will be assigned automatically</span>
       session<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>tk3<span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out
               <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk3.getTimekeeperId() = "</span> <span class="token operator">+</span> tk3<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Now 'tk3' has Persistent state</span>
       <span class="token comment">// It has been managed in Session.</span>
       <span class="token comment">// But no action insert, or update to DB.</span>
       <span class="token comment">// ==&gt; true</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk3 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Call flush.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// To push data into the DB, call flush().</span>
       <span class="token comment">// If not call flush() data will be pushed to the DB when calling commit().</span>
       <span class="token comment">// Now possible to Insert or Update DB. (!!!)</span>
       <span class="token comment">// Depending on the ID of 'tk3' exists in the DB or not</span>
       session<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       String timekeeperId <span class="token operator">=</span> tk3<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- timekeeperId = "</span> <span class="token operator">+</span> timekeeperId<span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- inOut = "</span> <span class="token operator">+</span> tk3<span class="token punctuation">.</span><span class="token function">getInOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- dateTime = "</span> <span class="token operator">+</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tk3<span class="token punctuation">.</span><span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> tk3<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token function">saveOrUpdate_Transient</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/767140540_99817.png" alt=""></p>
<h3 id="h3-11-6-merge-object-"><a name="11.6 - 瞬态转为持久化状态：使用merge(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.6 - 瞬态转为持久化状态：使用merge(Object)</h3><p>创建一个JAVA类文件：<em>MergeTransientDemo.java</em>，用于演示对象的持久化(Persistent)状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Timekeeper<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeTransientDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> DateFormat df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"dd-MM-yyyy HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> Timekeeper <span class="token function">saveOrUpdate_Transient</span><span class="token punctuation">(</span>Session session<span class="token punctuation">,</span>
           Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// Note:</span>
       <span class="token comment">// Configuring of timekeeperId</span>
       <span class="token comment">// @GeneratedValue(generator = "uuid")</span>
       <span class="token comment">// @GenericGenerator(name = "uuid", strategy = "uuid2")        </span>
       Timekeeper tk4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timekeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       tk4<span class="token punctuation">.</span><span class="token function">setEmployee</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk4<span class="token punctuation">.</span><span class="token function">setInOut</span><span class="token punctuation">(</span>Timekeeper<span class="token punctuation">.</span>IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
       tk4<span class="token punctuation">.</span><span class="token function">setDateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Now 'tk4' Transient status.</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk4 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====== CALL merge(tk).... ==========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Hibernate2 has method saveOrUpdateCopy</span>
       <span class="token comment">// Hibernate3 change saveOrUpdateCopy to merge</span>
       <span class="token comment">// So there will be similarities between the two methods merge and copyOrUpdate</span>
       <span class="token comment">// Here Hibernate check tk4 has ID or not</span>
       <span class="token comment">// If not, Hibernate assign value to ID of tk4</span>
       <span class="token comment">// Return copy of tk4.</span>
       Timekeeper tk4Copy <span class="token operator">=</span> <span class="token punctuation">(</span>Timekeeper<span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>tk4<span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out
               <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk4.getTimekeeperId() = "</span> <span class="token operator">+</span> tk4<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// Now 'tk4' still Transient state.</span>
       <span class="token comment">// and 'tk4Copy' has Persistent status</span>
       <span class="token comment">// No action with DB (insert or update).</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk4 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// 'tk4Copy' has Persistent status</span>
       <span class="token comment">// ==&gt; true</span>
       System<span class="token punctuation">.</span>out
               <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk4Copy Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk4Copy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- Call flush.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


       <span class="token comment">// This time have Insert or Update to DB. (!!!)</span>
       session<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// 'tk4' still Transitent, after flush().</span>
       <span class="token comment">// merge(..) safer than saveOrUpdate().</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- tk4 Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>tk4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">//</span>
       String timekeeperId <span class="token operator">=</span> tk4<span class="token punctuation">.</span><span class="token function">getTimekeeperId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- timekeeperId = "</span> <span class="token operator">+</span> timekeeperId<span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- inOut = "</span> <span class="token operator">+</span> tk4<span class="token punctuation">.</span><span class="token function">getInOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- dateTime = "</span> <span class="token operator">+</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tk4<span class="token punctuation">.</span><span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> tk4<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token function">saveOrUpdate_Transient</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/815140542_53040.png" alt=""></p>
<h3 id="h3-11-7-"><a name="11.7 - 持久化转变为分离状态" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.7 - 持久化转变为分离状态</h3><p>由Hibernate管理的持久化(Persistent)条件中的一个对象可以通过以下两个<code>Session</code>的方法转换为<code>Detached</code>(独立于Hibernate的管理)状态：</p>
<ul>
<li><p><code>evict (Object)</code> - 从Hibernate管理中删除一个对象</p>
</li><li><p><code>clear()</code> - 从Hibernate管理的对象中删除所有对象。</p>
</li></ul>
<p>当然，当<code>Session</code>调用顺序为：<code>commit()</code>，<code>close()</code>或<code>rollback()</code>时，当前会话已经完成。 此会话的所有<code>Persistence</code>对象将从新打开的会话中分离。</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/892100550_69590.png" alt=""></p>
<p>创建一个JAVA类文件：<em>EvictDemo.java</em>，用于演示对象持久化转变为分离状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EvictDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// This is object has Persistent status</span>
           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// ==&gt; true</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- emp Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// using evict() to evicts a single object from the session</span>
           session<span class="token punctuation">.</span><span class="token function">evict</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Now 'emp' has Detached status</span>
           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- emp Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// All change on the 'emp' will not update</span>
           <span class="token comment">// if not reatach 'emp' to session</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpNo</span><span class="token punctuation">(</span><span class="token string">"NEW"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/541140544_88395.png" alt=""></p>
<p>创建一个JAVA类文件：<em>ClearDemo.java</em>，用于演示将所有对象持久化转变为分离状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClearDemo</span> <span class="token punctuation">{</span>


   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       Department dept <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// It is an object has Persistent status.</span>
           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           dept <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// clear() evicts all the objects in the session.</span>
           session<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Now 'emp' &amp; 'dept' has Detached status</span>
           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- emp Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- dept Persistent? "</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// All change on the 'emp' will not update</span>
           <span class="token comment">// if not reatach 'emp' to session</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpNo</span><span class="token punctuation">(</span><span class="token string">"NEW"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           dept <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findDepartment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token string">"D20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Dept Name = "</span><span class="token operator">+</span> dept<span class="token punctuation">.</span><span class="token function">getDeptName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/760140546_64617.png" alt=""></p>
<h3 id="h3-11-8-"><a name="11.8 - 分离状态转变为持久化状态" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.8 - 分离状态转变为持久化状态</h3><p>Hibernate管理分离的对象可以通过以下<code>Session</code>的一些方法重新附加：</p>
<ul>
<li>update(Object)</li><li>saveOrUpdate(Object)</li><li>merge(Object)</li><li>refresh(Object)</li><li>lock(Object)</li></ul>
<p>可以在以下示例中看到这些方法的区别：</p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/721100554_22650.png" alt=""></p>
<h3 id="h3-11-9-update-object-"><a name="11.9-分离转变为持久性状态：使用update(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.9-分离转变为持久性状态：使用update(Object)</h3><p>创建一个JAVA类文件：<em>UpdateDetachedDemo.java</em>，用于演示将对象分离转变为持久性状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Department<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateDetachedDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Session session1 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// This is a Persistent object.</span>
            emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session1<span class="token punctuation">,</span> <span class="token string">"E7499"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// session1 was closed after a commit is called.</span>
            session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Open other session</span>
        Session session2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Check state of 'emp'</span>
            <span class="token comment">// ==&gt; false</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- emp Persistent? "</span> <span class="token operator">+</span> session2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp salary: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// update (..) is only used for Detached object.</span>
            <span class="token comment">// (Not for Transient object).</span>
            <span class="token comment">// Use the update (emp) to bring back emp Persistent state.</span>
            session2<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Call flush</span>
            <span class="token comment">// Update statement will be called.</span>
            session2<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Emp salary after update: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// session2 was closed after a commit is called.</span>
            session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/672140548_49743.png" alt=""></p>
<h3 id="h3-11-10-saveorupdate-object-"><a name="11.10 - 分离转变为持久性状态：使用saveOrUpdate(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.10 - 分离转变为持久性状态：使用saveOrUpdate(Object)</h3><p>创建一个JAVA类文件：<em>SaveOrUpdateDetachedDemo.java</em>，用于演示将对象分离转变为持久性状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SaveOrUpdateDetachedDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// An object Detached state.</span>
       Employee emp <span class="token operator">=</span> <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - GET EMP "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Random delete or not delete Employee</span>
       <span class="token keyword">boolean</span> delete <span class="token operator">=</span> <span class="token function">deleteOrNotDelete</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - DELETE? "</span> <span class="token operator">+</span> delete<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Call saveOrUpdate for detached object.</span>
       <span class="token function">saveOrUpdate_test</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// After call saveOrUpdate()</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - EMP ID "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>


   <span class="token comment">// Return Employee object has Detached state</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> Employee <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session1 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           Long maxEmpId <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">getMaxEmpId</span><span class="token punctuation">(</span>session1<span class="token punctuation">)</span><span class="token punctuation">;</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Max Emp ID "</span> <span class="token operator">+</span> maxEmpId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           Employee emp2 <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session1<span class="token punctuation">,</span> <span class="token string">"E7839"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           Long empId <span class="token operator">=</span> maxEmpId <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
           emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpId</span><span class="token punctuation">(</span>empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpNo</span><span class="token punctuation">(</span><span class="token string">"E"</span> <span class="token operator">+</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp<span class="token punctuation">.</span><span class="token function">setDepartment</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getDepartment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpName</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp<span class="token punctuation">.</span><span class="token function">setHideDate</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getHideDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setJob</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">1000F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// emp has been managed by Hibernate</span>
           session1<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// session1 was closed after a commit is called.</span>
           <span class="token comment">// An Employee record are insert into DB.            </span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token comment">// Session1 closed 'emp' switch to Detached state.</span>
       <span class="token keyword">return</span> emp<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Random: delete or not delete.</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">deleteOrNotDelete</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// A random number 0-9</span>
       <span class="token keyword">int</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           String sql <span class="token operator">=</span> <span class="token string">"Delete "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span>
                   <span class="token operator">+</span> <span class="token string">" where e.empId =:empId "</span><span class="token punctuation">;</span>
           Query query <span class="token operator">=</span> session2<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
           query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"empId"</span><span class="token punctuation">,</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           query<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveOrUpdate_test</span><span class="token punctuation">(</span>Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Open other session</span>
       Session session3 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Check state of emp</span>
           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - emp Persistent? "</span> <span class="token operator">+</span> session3<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary before update: "</span>
                   <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Set new salary for Detached emp object.</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Using saveOrUpdate(emp) to switch emp to Persistent state</span>
           <span class="token comment">// Note: If exists object same ID in session, this method raise Exception</span>
           <span class="token comment">//</span>
           <span class="token comment">// Now, no action with DB.            </span>
           session3<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// By pushing data into the DB.</span>
           <span class="token comment">// It will call a Insert or update statement.</span>
           <span class="token comment">// If the record is deleted before ==&gt; insert</span>
           <span class="token comment">// Else ==&gt; update.    </span>
           session3<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out
                   <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary after update: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// session3 was closed after a commit is called.</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，多几次运行示例错码，可以看到两种情况，<code>saveOrUpdate()</code>方法调用在数据上插入或更新。得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/120140551_55482.png" alt=""></p>
<h3 id="h3-11-11-merge-object-"><a name="11.11-分离转变为持久性状态：使用merge(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.11-分离转变为持久性状态：使用merge(Object)</h3><p><code>Hibernate 2</code>版本有<code>saveOrUpdateCopy(Object)</code>方法。从<code>Hibernate 3</code>起，它被重命名为<code>merge(Object)</code>。 因此与<code>saveOrUpdate()</code>相比，<code>merge()</code>方法有一些相似性和差异。</p>
<p><code>merge(Object)</code>不会将对象置于Hibernate的管理下，而是创建一个对象的副本，而不是管理该对象。</p>
<p>如果调用<code>saveOrUpdate(aObject)</code>则<code>aObject</code>由Hibernate管理，并且与<code>aObject</code>具有相同的ID将会抛出异常，但是使用<code>merge(aObject)</code>时不会得到此异常。</p>
<p>创建一个JAVA类文件：<em>MergeDetachedDemo.java</em>，用于演示将对象分离转变为持久性状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Query<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeDetachedDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// An object has Detached status</span>
       Employee emp <span class="token operator">=</span> <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - GET EMP "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Random: delete or not delete the Employee by ID.</span>
       <span class="token keyword">boolean</span> delete <span class="token operator">=</span> <span class="token function">deleteOrNotDelete</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - DELETE? "</span> <span class="token operator">+</span> delete<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Call saveOrUpdate Detached object</span>
       <span class="token function">saveOrUpdate_test</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// After call saveOrUpdate</span>
       <span class="token comment">// ...</span>
       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - EMP ID "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>


   <span class="token comment">// Method return Employee object</span>
   <span class="token comment">// and has Detached status.</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> Employee <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session1 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           Long maxEmpId <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">getMaxEmpId</span><span class="token punctuation">(</span>session1<span class="token punctuation">)</span><span class="token punctuation">;</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Max Emp ID "</span> <span class="token operator">+</span> maxEmpId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           Employee emp2 <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session1<span class="token punctuation">,</span> <span class="token string">"E7839"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           Long empId <span class="token operator">=</span> maxEmpId <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
           emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpId</span><span class="token punctuation">(</span>empId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpNo</span><span class="token punctuation">(</span><span class="token string">"E"</span> <span class="token operator">+</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp<span class="token punctuation">.</span><span class="token function">setDepartment</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getDepartment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setEmpName</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getEmpName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp<span class="token punctuation">.</span><span class="token function">setHideDate</span><span class="token punctuation">(</span>emp2<span class="token punctuation">.</span><span class="token function">getHideDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setJob</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">1000F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// 'emp' has Persistant state</span>
           session1<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// session1 was closed after a commit is called.</span>
           <span class="token comment">// An Employee record are insert into DB.</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token comment">// session1 closed, 'emp' switched Detached state.</span>
       <span class="token keyword">return</span> emp<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>


   <span class="token comment">// Delete Employee by ID</span>
   <span class="token comment">// Random: delete or not delete</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">deleteOrNotDelete</span><span class="token punctuation">(</span>Long empId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// A random number 0-9</span>
       <span class="token keyword">int</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           String sql <span class="token operator">=</span> <span class="token string">"Delete "</span> <span class="token operator">+</span> Employee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" e "</span>
                   <span class="token operator">+</span> <span class="token string">" where e.empId =:empId "</span><span class="token punctuation">;</span>
           Query query <span class="token operator">=</span> session2<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
           query<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"empId"</span><span class="token punctuation">,</span> empId<span class="token punctuation">)</span><span class="token punctuation">;</span>

           query<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveOrUpdate_test</span><span class="token punctuation">(</span>Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Open other session</span>
       Session session3 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// The fact, 'emp' has Detached state</span>
           <span class="token comment">// It is not managed by Hibernate.</span>
           <span class="token comment">// Check the status of emp:</span>
           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - emp Persistent? "</span> <span class="token operator">+</span> session3<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary before update: "</span>
                   <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// Set new salary for Detached object 'emp'</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// merge(emp) return empMerge, a copy of 'emp',</span>
           <span class="token comment">// empMerge managed by Hibernate</span>
           <span class="token comment">// 'emp' still in Detached state</span>
           <span class="token comment">//</span>
           <span class="token comment">// At this time there is no action regarding DB.</span>
           Employee empMerge <span class="token operator">=</span> <span class="token punctuation">(</span>Employee<span class="token punctuation">)</span> session3<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - emp Persistent? "</span> <span class="token operator">+</span> session3<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">// ==&gt; true</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - empMerge Persistent? "</span>
                   <span class="token operator">+</span> session3<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>empMerge<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Push data into the DB.</span>
           <span class="token comment">// Here it is possible to create the Insert or Update on DB.</span>
           <span class="token comment">// If the corresponding record has been deleted by someone, it insert</span>
           <span class="token comment">// else it update</span>
           session3<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out
                   <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary after update: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// session3 closed after a commit is called.</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session3<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，多几次运行示例错码，可以看到两种情况，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/708150500_58695.png" alt=""></p>
<h3 id="h3-11-12-refresh-object-"><a name="11.12 - 分离转变为持久性状态：使用refresh(Object)" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.12 - 分离转变为持久性状态：使用refresh(Object)</h3><p>创建一个JAVA类文件：<em>RefreshDetachedDemo.java</em>，用于演示将对象分离转变为持久性状态。</p>
<pre class="language-java code-toolbar"><code class=" language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>SessionFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>HibernateUtils<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>yiibai<span class="token punctuation">.</span>entities<span class="token punctuation">.</span>Employee<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RefreshDetachedDemo</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment">// an Object with Detached status</span>
       Employee emp <span class="token operator">=</span> <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - GET EMP "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Refresh Object  </span>
       <span class="token function">refresh_test</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>


   <span class="token comment">// Return Employee object has Detached state</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> Employee <span class="token function">getEmployee_Detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       Session session1 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       Employee emp <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           emp <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">findEmployee</span><span class="token punctuation">(</span>session1<span class="token punctuation">,</span> <span class="token string">"E7839"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// session1 was closed after a commit is called.</span>
           <span class="token comment">// An Employee record are insert into DB.</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session1<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token comment">// Session1 closed 'emp' switch to Detached state.</span>
       <span class="token keyword">return</span> emp<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">refresh_test</span><span class="token punctuation">(</span>Employee emp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       SessionFactory factory <span class="token operator">=</span> HibernateUtils<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// Open other session</span>
       Session session2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// Check the status of 'emp' (Detached)</span>
           <span class="token comment">// ==&gt; false</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - emp Persistent? "</span> <span class="token operator">+</span> session2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary before update: "</span>
                   <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Set new salary for 'emp'.</span>
           emp<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


           <span class="token comment">// refresh: make a query statement</span>
           <span class="token comment">// and switch 'emp' to Persistent state</span>
           <span class="token comment">// The changes are ignored</span>
           session2<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment">// ==&gt; true</span>
           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - emp Persistent? "</span> <span class="token operator">+</span> session2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" - Emp salary after refresh: "</span>
                   <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           session2<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code><div class="toolbar"><div class="toolbar-item"><span>Java</span></div></div></pre>
<p>执行上面代码，多几次运行示例错码，可以看到两种情况，得到以下结果 - </p>
<p><img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/955150503_68813.png" alt=""></p><br>
																

						<p>
							<b style="color:#f57e42;">易百教程移动端</b>：请扫描本页面底部(右侧)二维码并关注微信公众号，回复："<b>教程</b>" 选择相关教程阅读或直接访问：http://m.yiibai.com 。
						</p>


						<div style="width:100%;margin-bottom: 16px; height: 32px;margin-top:18px;">
							<span style="float:left;">上一篇：<a href="https://www.yiibai.com/hibernate/hibernate-second-level-cache.html#article-start" title="Hibernate二级缓存"><i class="layui-icon"></i>Hibernate二级缓存</a></span><span style="float:right;">下一篇：哥，这回真没有了</span>	
							
							<div id="googlead" style="float:left;margin-top:8px;">
								<script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
								<!-- yiibai下方 -->
								<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-1090193214637198" data-ad-slot="6494738921"></ins>
								<script>
								(adsbygoogle = window.adsbygoogle || []).push({});
								</script>
							</div>

						</div>


						
						<h4 style="color: #f57e42;padding-top:6px;padding-bottom: 4px;float: left;width: 100%;margin-bottom:12px;">加QQ群啦，易百教程官方技术学习群</h4>
						
						<blockquote style="width:100%;float:left;margin-bottom:6px;padding-bottom:4px;">
							注意：建议每个人选自己的技术方向加群，同一个QQ最多限加3个群。
						</blockquote>
						<ul style="width:100%;float:left;">
							<li><b>Java技术群：</b> 227270512 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>MySQL/SQL群：</b> 418407075 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>大数据开发群：</b> 655154550 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>Python技术群：</b> 287904175 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>人工智能深度学习：</b> 456236082 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>测试工程师(新群)：</b> 415553199 （人数：1000，等级：LV1，免费：是）</li>
							<li><b>前端技术群(新群)：</b> 410430016 （人数：1000，等级：LV1，免费：是）</li>
							<li><b>C/C++技术(新群)：</b> 629264796 （人数：1000，等级：LV1，免费：是）</li>
							<li><b>Node.js技术(新群)：</b> 621549808 （人数：1000，等级：LV1，免费：是）</li>
							<li><b>PostgreSQL数据库（新群）：</b> 539504187 （人数：1000，等级：LV1，免费：否）</li>
							<li><b>Linux技术：</b> 479429477 （人数：2000，等级：LV5，免费：否）</li>
							<li><b>PHP开发者：</b> 460153241 （人数：2000，等级：LV5，免费：是）</li>							
							<li><b>Oracle数据库：</b> 175248146 （人数：2000，等级：LV5，免费：是）</li>
							<li><b>C#/ASP.Net开发者：</b> 579821706 （人数：2000，等级：LV5，免费：是）</li>
							<li><b>数据分析师：</b> 397883996 （人数：1000，等级：LV1，免费：是）R语言，Matlab语言等技术</li>
						</ul>
						
					</div>

					<div class="xshare">
						<!-- JiaThis Button BEGIN -->
						<div class="jiathis_style_24x24">
							<a class="jiathis_button_qzone"></a>
							<a class="jiathis_button_tsina"></a>
							<a class="jiathis_button_tqq"></a>
							<a class="jiathis_button_weixin"></a>						
							<a class="jiathis_button_ishare"></a>
							<a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
							<a class="jiathis_counter_style"></a>
						</div>
						<script type="text/javascript" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/jia.js" charset="utf-8"></script>
						<!-- JiaThis Button END -->
					</div>    
					
					
					<!--// google adv -->
					
					

					<!--PC版-->
					<div id="SOHUCS" sid="article-10263"></div>
					<script charset="utf-8" type="text/javascript" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/changyan.js"></script>
					<script type="text/javascript">
					window.changyan.api.config({
					appid: 'cysNoANqz',
					conf: 'prod_d6c4446986ec966c450afefb0c11ea5f'
					});
					</script>

					<div style="width:100%;">
						<script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
						<ins class="adsbygoogle" style="display:block" data-ad-format="autorelaxed" data-ad-client="ca-pub-1090193214637198" data-ad-slot="1254304051"></ins>
						<script>
							 (adsbygoogle = window.adsbygoogle || []).push({});
						</script>
					</div>
					
                </article>				
		</div>
		<!--//end content-->

		<div class="page-right">
						
			<div class="item">

				<script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
				<!-- GoogleAdv-300x250 -->
				<ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-1090193214637198" data-ad-slot="9485766451"></ins>
				<script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script>

			</div>
			<!--
			<div class="item">
				<script type="text/javascript">
					/*BDAdv-300x250-创建于*/
					var cpro_id = "u3028183";
				</script>
				<script type="text/javascript" src="http://cpro.baidustatic.com/cpro/ui/c.js"></script>

			</div>-->

			<div class="item">

				<script async="" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/adsbygoogle.js"></script>
				<!-- Right-300x600 -->
				<ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-1090193214637198" data-ad-slot="9448740452"></ins>
				<script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script>
			</div>
		</div><!--//end page-right -->

	</section>

	
<footer class="footer">	
	<div class="container" id="yiiba-bottom">			
		<div class="ybm-block">
			<div class="ybm cf">
			 <dl>
				<dt>推荐/最新教程</dt>
						<dd>·<a href="http://www.yiibai.com/javazip" title="java.util.zip包" target="_blank">java.util.zip包</a> </dd><dd>·<a href="http://www.yiibai.com/commons_collections" title="Apache Commons Collections教程" target="_blank">Apache Commons Collections教程</a> </dd><dd>·<a href="http://www.yiibai.com/scipy" title="Scipy教程" target="_blank">Scipy教程</a> </dd><dd>·<a href="http://www.yiibai.com/python/py_data_structure" title="Python数据结构" target="_blank">Python数据结构</a> </dd><dd>·<a href="http://www.yiibai.com/java/java9" title="Java9教程" target="_blank">Java9教程</a> </dd><dd>·<a href="http://www.yiibai.com/httpclient" title="HttpClient教程" target="_blank">HttpClient教程</a> </dd><dd>·<a href="http://www.yiibai.com/gson" title="Gson教程" target="_blank">Gson教程</a> </dd><dd>·<a href="http://www.yiibai.com/thymeleaf" title="Thymeleaf教程" target="_blank">Thymeleaf教程</a> </dd>
	
			 
			 </dl>
			
			 <dl>
				<dt>最新更新 </dt>
					<dd>·<a target="_blank" href="http://www.yiibai.com/javazip/javazip_deflater.html" title="java.util.zip.Deflater类">java.util.zip.Deflater类</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/javazip/javazip_crc32.html" title="java.util.zip.CRC32类">java.util.zip.CRC32类</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/javazip/javazip_adler32.html" title="java.util.zip.Adler32类">java.util.zip.Adler32类</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/commons_collections/commons_collections_union.html" title="Apache通用集合联合">Apache通用集合联合</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/commons_collections/commons_collections_subtraction.html" title="Apache通用集合差集">Apache通用集合差集</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/commons_collections/commons_collections_intersection.html" title="Apache通用集合相交">Apache通用集合相交</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/commons_collections/commons_collections_inclusion.html" title="Apache通用集合包函关系">Apache通用集合包函关系</a></dd><dd>·<a target="_blank" href="http://www.yiibai.com/commons_collections/commons_collections_safe_checks.html" title="Apache通用集合安全空检查">Apache通用集合安全空检查</a></dd>			   
			  
			 </dl>

			 <dl>
			  
				<dt>站点信息</dt>
				<dd> · <a target="_blank" href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=IBcWGRcSGBYYE2BRUQ5DT00" rel="external nofollow">意见反馈</a> </dd>
				<dd> · <a target="_blank" href="http://www.yiibai.com/disclaimer.html">免责声明</a> </dd>
				<dd> · <a target="_blank" href="http://www.yiibai.com/about_us.html">关于我们</a> </dd>
				<dd> · <a target="_blank" href="http://www.yiibai.com/reward.html#to-qcode">关于捐助</a> </dd>
			    <dd> · <a target="_blank" href="http://www.yiibai.com/siteinfo/download.html" style="color:#e74851;">所有实例代码下载</a> </dd>
			 </dl>

			 <dl>
				<dt>易百教程官方QQ群</dt>
						<dd>JAVA技术：227270512</dd>
						<dd>MySQL数据库：418407075</dd>						
						<dd>Python技术： 287904175</dd>
						<dd>大数据开发： 655154550</dd>
						<dd>Linux技术： 479429477</dd>
						<dd>PHP/Web技术： 460153241</dd>

			</dl>


			 <div class="search-share">
			  <div class="app-download">
				<div>
				 <strong>关注微信公众号</strong>
				</div>
			  </div>
			  <div class="share">
			  <img src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/qrcode.jpg" width="150" height="150">
			   </div>
			 </div>
			</div>
		   </div>		
	</div>

</footer>
<div id="footer-copyright">
	Copyright © 2012-2018<strong><a href="http://www.yiibai.com/" target="_blank">易百教程</a></strong>&nbsp; <strong>
		
		<a href="http://www.yiibai.com/" target="_blank">yiiai.com</a></strong> All Rights Reserved. 备案号：琼ICP备13001417号-3 联系我们：769728683@qq.com &nbsp;&nbsp;

	
		<script>
		var _hmt = _hmt || [];
		(function() {
		  var hm = document.createElement("script");
		  hm.src = "https://hm.baidu.com/hm.js?424e222704e2274e37a8169110e6e00a";
		  var s = document.getElementsByTagName("script")[0]; 
		  s.parentNode.insertBefore(hm, s);
		})();
		</script>
		<script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_4255568'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s23.cnzz.com/stat.php%3Fid%3D4255568' type='text/javascript'%3E%3C/script%3E"));</script><span id="cnzz_stat_icon_4255568"><a href="http://www.cnzz.com/stat/website.php?web_id=4255568" target="_blank" title="站长统计">站长统计</a></span><script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/stat.php" type="text/javascript"></script><script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/core.php" charset="utf-8" type="text/javascript"></script>
	
</div>

<div class="fixed-btn">
	<a class="to-top" href="javascript:void(0)" title="返回顶部"> <i class="fa fa-angle-up"></i></a> <a class="qrcode" href="javascript:void(0)" title="关注我们"><i class="fa fa-qrcode"></i></a>
	<a class="writer" target="_blank" href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=IBcWGRcSGBYYE2BRUQ5DT00" style="font-size: 12px;" title="问题反馈"><i class="fa fa-envelope-o" style="font-size: 20px;"></i></a>
	<!-- qrcode modal -->

	<div id="bottom-qrcode" class="modal fade in" style="display: none;">
		<h4>微信关注</h4>
		<div class="panel-body">
			<img alt="微信关注" src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/qrcode.jpg" width="128" height="128">
		</div>
	</div>
</div>

<script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/jquery.js"></script> 
<script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/main.js"></script>
<script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/prism.js"></script>
<script src="Hibernate%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20Hibernate%E6%95%99%E7%A8%8B%E2%84%A2_files/layer.js" charset="utf-8"></script>
<script>
	var TBUI = {
		URL : 'http://www.yiibai.com',
		STATIC : 'http://www.yiibai.com/static.v4',
		VERSION : '3.0',
	};
	$("#btn-reward").on('click', function(){
		layer.open({
			  type: 2,
			  title: "请扫描以下二维码支付打赏",
			  area: ['56%', '70%'],
			  shade: 0.4,
			  closeBtn: 1,
			  shadeClose: true,
			  content: '/static/images/reward.png'
		});

	});
</script>


</body></html>